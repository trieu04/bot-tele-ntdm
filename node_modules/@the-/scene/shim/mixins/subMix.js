/**
 * @function subMix
 * @memberOf module:@the-/scene.mixins
 * @param {function} BaseClass
 * @returns {function} MixedClass
 */
'use strict';
/** @lends module:@the-/scene.mixins.subMix */

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

function subMix(BaseClass) {
  /**
   * @memberOf module:@the-/scene.mixins.subMix
   * @inner
   */
  var SubMixed =
  /*#__PURE__*/
  function (_BaseClass) {
    (0, _inherits2["default"])(SubMixed, _BaseClass);

    function SubMixed() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2["default"])(this, SubMixed);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(SubMixed)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.subs = {};
      return _this;
    }
    /**
     * Get sub scene with scope for namepath
     * @param {string} namepath - Namepath
     * @returns {*}
     */


    (0, _createClass2["default"])(SubMixed, [{
      key: "subFor",
      value: function subFor(namepath) {
        var scope = this.scope.of(namepath);
        var sub = this.subs[namepath];

        if (sub) {
          return sub;
        }

        var SubScene =
        /*#__PURE__*/
        function (_this$constructor) {
          (0, _inherits2["default"])(SubScene, _this$constructor);

          function SubScene() {
            (0, _classCallCheck2["default"])(this, SubScene);
            return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf3["default"])(SubScene).apply(this, arguments));
          }

          (0, _createClass2["default"])(SubScene, [{
            key: "scope",
            get: function get() {
              return scope;
            }
          }]);
          return SubScene;
        }(this.constructor);

        this.subs[namepath] = new SubScene(this.props);
      }
    }]);
    return SubMixed;
  }(BaseClass);

  return SubMixed;
}

module.exports = subMix;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1Yk1peC5qcyJdLCJuYW1lcyI6WyJzdWJNaXgiLCJCYXNlQ2xhc3MiLCJTdWJNaXhlZCIsImFyZ3MiLCJzdWJzIiwibmFtZXBhdGgiLCJzY29wZSIsIm9mIiwic3ViIiwiU3ViU2NlbmUiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQU1BO0FBRUE7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsU0FBU0EsTUFBVCxDQUFnQkMsU0FBaEIsRUFBMkI7QUFDekI7Ozs7QUFEeUIsTUFLbkJDLFFBTG1CO0FBQUE7QUFBQTtBQUFBOztBQU12Qix3QkFBcUI7QUFBQTs7QUFBQTs7QUFBQTs7QUFBQSx3Q0FBTkMsSUFBTTtBQUFOQSxRQUFBQSxJQUFNO0FBQUE7O0FBQ25CLDJLQUFTQSxJQUFUO0FBQ0EsWUFBS0MsSUFBTCxHQUFZLEVBQVo7QUFGbUI7QUFHcEI7QUFFRDs7Ozs7OztBQVh1QjtBQUFBO0FBQUEsNkJBZ0JoQkMsUUFoQmdCLEVBZ0JOO0FBQ2YsWUFBTUMsS0FBSyxHQUFHLEtBQUtBLEtBQUwsQ0FBV0MsRUFBWCxDQUFjRixRQUFkLENBQWQ7QUFDQSxZQUFNRyxHQUFHLEdBQUcsS0FBS0osSUFBTCxDQUFVQyxRQUFWLENBQVo7O0FBQ0EsWUFBSUcsR0FBSixFQUFTO0FBQ1AsaUJBQU9BLEdBQVA7QUFDRDs7QUFMYyxZQU9UQyxRQVBTO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxnQ0FRRDtBQUNWLHFCQUFPSCxLQUFQO0FBQ0Q7QUFWWTtBQUFBO0FBQUEsVUFPUSxLQUFLSSxXQVBiOztBQWFmLGFBQUtOLElBQUwsQ0FBVUMsUUFBVixJQUFzQixJQUFJSSxRQUFKLENBQWEsS0FBS0UsS0FBbEIsQ0FBdEI7QUFDRDtBQTlCc0I7QUFBQTtBQUFBLElBS0ZWLFNBTEU7O0FBaUN6QixTQUFPQyxRQUFQO0FBQ0Q7O0FBRURVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakIiLCJzb3VyY2VSb290IjoiLi4vbGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZnVuY3Rpb24gc3ViTWl4XG4gKiBAbWVtYmVyT2YgbW9kdWxlOkB0aGUtL3NjZW5lLm1peGluc1xuICogQHBhcmFtIHtmdW5jdGlvbn0gQmFzZUNsYXNzXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb259IE1peGVkQ2xhc3NcbiAqL1xuJ3VzZSBzdHJpY3QnXG5cbi8qKiBAbGVuZHMgbW9kdWxlOkB0aGUtL3NjZW5lLm1peGlucy5zdWJNaXggKi9cbmZ1bmN0aW9uIHN1Yk1peChCYXNlQ2xhc3MpIHtcbiAgLyoqXG4gICAqIEBtZW1iZXJPZiBtb2R1bGU6QHRoZS0vc2NlbmUubWl4aW5zLnN1Yk1peFxuICAgKiBAaW5uZXJcbiAgICovXG4gIGNsYXNzIFN1Yk1peGVkIGV4dGVuZHMgQmFzZUNsYXNzIHtcbiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgICBzdXBlciguLi5hcmdzKVxuICAgICAgdGhpcy5zdWJzID0ge31cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgc3ViIHNjZW5lIHdpdGggc2NvcGUgZm9yIG5hbWVwYXRoXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVwYXRoIC0gTmFtZXBhdGhcbiAgICAgKiBAcmV0dXJucyB7Kn1cbiAgICAgKi9cbiAgICBzdWJGb3IobmFtZXBhdGgpIHtcbiAgICAgIGNvbnN0IHNjb3BlID0gdGhpcy5zY29wZS5vZihuYW1lcGF0aClcbiAgICAgIGNvbnN0IHN1YiA9IHRoaXMuc3Vic1tuYW1lcGF0aF1cbiAgICAgIGlmIChzdWIpIHtcbiAgICAgICAgcmV0dXJuIHN1YlxuICAgICAgfVxuXG4gICAgICBjbGFzcyBTdWJTY2VuZSBleHRlbmRzIHRoaXMuY29uc3RydWN0b3Ige1xuICAgICAgICBnZXQgc2NvcGUoKSB7XG4gICAgICAgICAgcmV0dXJuIHNjb3BlXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5zdWJzW25hbWVwYXRoXSA9IG5ldyBTdWJTY2VuZSh0aGlzLnByb3BzKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBTdWJNaXhlZFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN1Yk1peFxuIl19