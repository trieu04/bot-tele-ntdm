/**
 * Clone a object
 * @function clone
 * @param {Object} src - Source object to clone
 * @param {Object} [options={}] - Optional settings
 * @param {string[]|RegExp[]} [options.without] - Properties to skip
 * @returns {Object} - Cloned object
 */
'use strict';
/** @lends clone */

function clone(src) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var cloned = Object.assign({}, src);
  var without = [].concat(options.without || []);

  var _arr = Object.keys(cloned);

  var _loop = function _loop() {
    var name = _arr[_i];
    var shouldDelete = without.some(function (without) {
      return without.test && without.test(name) || name === without;
    });

    if (shouldDelete) {
      delete cloned[name];
    }
  };

  for (var _i = 0; _i < _arr.length; _i++) {
    _loop();
  }

  return cloned;
}

module.exports = clone;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsb25lLmpzIl0sIm5hbWVzIjpbImNsb25lIiwic3JjIiwib3B0aW9ucyIsImNsb25lZCIsIk9iamVjdCIsImFzc2lnbiIsIndpdGhvdXQiLCJjb25jYXQiLCJrZXlzIiwibmFtZSIsInNob3VsZERlbGV0ZSIsInNvbWUiLCJ0ZXN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7QUFFQTs7QUFDQSxTQUFTQSxLQUFULENBQWdCQyxHQUFoQixFQUFtQztBQUFBLE1BQWRDLE9BQWMsdUVBQUosRUFBSTtBQUNqQyxNQUFNQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JKLEdBQWxCLENBQWY7QUFFQSxNQUFNSyxPQUFPLEdBQUcsR0FBR0MsTUFBSCxDQUFVTCxPQUFPLENBQUNJLE9BQVIsSUFBbUIsRUFBN0IsQ0FBaEI7O0FBSGlDLGFBSWRGLE1BQU0sQ0FBQ0ksSUFBUCxDQUFZTCxNQUFaLENBSmM7O0FBQUE7QUFJNUIsUUFBTU0sSUFBSSxXQUFWO0FBQ0gsUUFBTUMsWUFBWSxHQUFHSixPQUFPLENBQUNLLElBQVIsQ0FBYSxVQUFDTCxPQUFEO0FBQUEsYUFBY0EsT0FBTyxDQUFDTSxJQUFSLElBQWdCTixPQUFPLENBQUNNLElBQVIsQ0FBYUgsSUFBYixDQUFqQixJQUF5Q0EsSUFBSSxLQUFLSCxPQUEvRDtBQUFBLEtBQWIsQ0FBckI7O0FBQ0EsUUFBSUksWUFBSixFQUFrQjtBQUNoQixhQUFPUCxNQUFNLENBQUNNLElBQUQsQ0FBYjtBQUNEO0FBUjhCOztBQUlqQywyQ0FBd0M7QUFBQTtBQUt2Qzs7QUFDRCxTQUFPTixNQUFQO0FBQ0Q7O0FBRURVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmQsS0FBakIiLCJzb3VyY2VSb290IjoiLi4vLi4vbGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDbG9uZSBhIG9iamVjdFxuICogQGZ1bmN0aW9uIGNsb25lXG4gKiBAcGFyYW0ge09iamVjdH0gc3JjIC0gU291cmNlIG9iamVjdCB0byBjbG9uZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSAtIE9wdGlvbmFsIHNldHRpbmdzXG4gKiBAcGFyYW0ge3N0cmluZ1tdfFJlZ0V4cFtdfSBbb3B0aW9ucy53aXRob3V0XSAtIFByb3BlcnRpZXMgdG8gc2tpcFxuICogQHJldHVybnMge09iamVjdH0gLSBDbG9uZWQgb2JqZWN0XG4gKi9cbid1c2Ugc3RyaWN0J1xuXG4vKiogQGxlbmRzIGNsb25lICovXG5mdW5jdGlvbiBjbG9uZSAoc3JjLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3QgY2xvbmVkID0gT2JqZWN0LmFzc2lnbih7fSwgc3JjKVxuXG4gIGNvbnN0IHdpdGhvdXQgPSBbXS5jb25jYXQob3B0aW9ucy53aXRob3V0IHx8IFtdKVxuICBmb3IgKGNvbnN0IG5hbWUgb2YgT2JqZWN0LmtleXMoY2xvbmVkKSkge1xuICAgIGNvbnN0IHNob3VsZERlbGV0ZSA9IHdpdGhvdXQuc29tZSgod2l0aG91dCkgPT4gKHdpdGhvdXQudGVzdCAmJiB3aXRob3V0LnRlc3QobmFtZSkpIHx8IChuYW1lID09PSB3aXRob3V0KSlcbiAgICBpZiAoc2hvdWxkRGVsZXRlKSB7XG4gICAgICBkZWxldGUgY2xvbmVkW25hbWVdXG4gICAgfVxuICB9XG4gIHJldHVybiBjbG9uZWRcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjbG9uZVxuIl19