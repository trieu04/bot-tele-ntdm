/**
 * Object utility
 * @module asobj
 */
'use strict';

var assign = require('./assign');

var cleanup = require('./cleanup');

var clone = require('./clone');

var deepEqual = require('./deep_equal');

var dig = require('./dig');

var keyFor = require('./key_for');

var retrieve = require('./retrieve');

var shallowEqual = require('./shallow_equal');

exports.assign = assign;
exports.cleanup = cleanup;
exports.clone = clone;
exports.deepEqual = deepEqual;
exports.dig = dig;
exports.keyFor = keyFor;
exports.retrieve = retrieve;
exports.shallowEqual = shallowEqual;
module.exports = {
  assign: assign,
  cleanup: cleanup,
  clone: clone,
  deepEqual: deepEqual,
  dig: dig,
  keyFor: keyFor,
  retrieve: retrieve,
  shallowEqual: shallowEqual
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFzc2lnbiIsInJlcXVpcmUiLCJjbGVhbnVwIiwiY2xvbmUiLCJkZWVwRXF1YWwiLCJkaWciLCJrZXlGb3IiLCJyZXRyaWV2ZSIsInNoYWxsb3dFcXVhbCIsImV4cG9ydHMiLCJtb2R1bGUiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBS0E7O0FBR0EsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLElBQU1FLEtBQUssR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBTUcsU0FBUyxHQUFHSCxPQUFPLENBQUMsY0FBRCxDQUF6Qjs7QUFDQSxJQUFNSSxHQUFHLEdBQUdKLE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUNBLElBQU1LLE1BQU0sR0FBR0wsT0FBTyxDQUFDLFdBQUQsQ0FBdEI7O0FBQ0EsSUFBTU0sUUFBUSxHQUFHTixPQUFPLENBQUMsWUFBRCxDQUF4Qjs7QUFDQSxJQUFNTyxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxpQkFBRCxDQUE1Qjs7QUFFQVEsT0FBTyxDQUFDVCxNQUFSLEdBQWlCQSxNQUFqQjtBQUNBUyxPQUFPLENBQUNQLE9BQVIsR0FBa0JBLE9BQWxCO0FBQ0FPLE9BQU8sQ0FBQ04sS0FBUixHQUFnQkEsS0FBaEI7QUFDQU0sT0FBTyxDQUFDTCxTQUFSLEdBQW9CQSxTQUFwQjtBQUNBSyxPQUFPLENBQUNKLEdBQVIsR0FBY0EsR0FBZDtBQUNBSSxPQUFPLENBQUNILE1BQVIsR0FBaUJBLE1BQWpCO0FBQ0FHLE9BQU8sQ0FBQ0YsUUFBUixHQUFtQkEsUUFBbkI7QUFDQUUsT0FBTyxDQUFDRCxZQUFSLEdBQXVCQSxZQUF2QjtBQUVBRSxNQUFNLENBQUNELE9BQVAsR0FBaUI7QUFDZlQsRUFBQUEsTUFBTSxFQUFOQSxNQURlO0FBRWZFLEVBQUFBLE9BQU8sRUFBUEEsT0FGZTtBQUdmQyxFQUFBQSxLQUFLLEVBQUxBLEtBSGU7QUFJZkMsRUFBQUEsU0FBUyxFQUFUQSxTQUplO0FBS2ZDLEVBQUFBLEdBQUcsRUFBSEEsR0FMZTtBQU1mQyxFQUFBQSxNQUFNLEVBQU5BLE1BTmU7QUFPZkMsRUFBQUEsUUFBUSxFQUFSQSxRQVBlO0FBUWZDLEVBQUFBLFlBQVksRUFBWkE7QUFSZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIuLi8uLi9saWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE9iamVjdCB1dGlsaXR5XG4gKiBAbW9kdWxlIGFzb2JqXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cblxuY29uc3QgYXNzaWduID0gcmVxdWlyZSgnLi9hc3NpZ24nKVxuY29uc3QgY2xlYW51cCA9IHJlcXVpcmUoJy4vY2xlYW51cCcpXG5jb25zdCBjbG9uZSA9IHJlcXVpcmUoJy4vY2xvbmUnKVxuY29uc3QgZGVlcEVxdWFsID0gcmVxdWlyZSgnLi9kZWVwX2VxdWFsJylcbmNvbnN0IGRpZyA9IHJlcXVpcmUoJy4vZGlnJylcbmNvbnN0IGtleUZvciA9IHJlcXVpcmUoJy4va2V5X2ZvcicpXG5jb25zdCByZXRyaWV2ZSA9IHJlcXVpcmUoJy4vcmV0cmlldmUnKVxuY29uc3Qgc2hhbGxvd0VxdWFsID0gcmVxdWlyZSgnLi9zaGFsbG93X2VxdWFsJylcblxuZXhwb3J0cy5hc3NpZ24gPSBhc3NpZ25cbmV4cG9ydHMuY2xlYW51cCA9IGNsZWFudXBcbmV4cG9ydHMuY2xvbmUgPSBjbG9uZVxuZXhwb3J0cy5kZWVwRXF1YWwgPSBkZWVwRXF1YWxcbmV4cG9ydHMuZGlnID0gZGlnXG5leHBvcnRzLmtleUZvciA9IGtleUZvclxuZXhwb3J0cy5yZXRyaWV2ZSA9IHJldHJpZXZlXG5leHBvcnRzLnNoYWxsb3dFcXVhbCA9IHNoYWxsb3dFcXVhbFxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYXNzaWduLFxuICBjbGVhbnVwLFxuICBjbG9uZSxcbiAgZGVlcEVxdWFsLFxuICBkaWcsXG4gIGtleUZvcixcbiAgcmV0cmlldmUsXG4gIHNoYWxsb3dFcXVhbFxufVxuIl19